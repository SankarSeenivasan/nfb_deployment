name: Production Server Deployment 
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    #if: contains(github.event.head_commit.message, 'deployment')
    steps:
    - uses: actions/checkout@v2
    - name: Clone OrganGuI Repository       
      run: git clone -b My-New-Branch https://SankarSeenivasan:/SankarSeenivasan/nfb_deployment/tree/My-New-Branch/test.py/SankarSeenivasan/CI-CD-Pipeline.git newely        
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2 
      with:
          key: ${{ secrets.SSH_PRIVATE_KEY_PROD_SERVER }}
          known_hosts: unnecessary

    - name: Adding Known Hosts
      run: ssh-keyscan -p ${{ secrets.SSH_PORT_PROD_SERVER}} -H ${{ secrets.SSH_HOST_PROD_SERVER}} >> ~/.ssh/known_hosts

    - name: Sync File
      env:
          dest: "${{ secrets.SSH_USER_PROD_SERVER}}@${{ secrets.SSH_HOST_PROD_SERVER}}:/root/clone_github"
      run: |
          echo "${{secrets.SSH_PRIVATE_KEY_PROD_SERVER}}" > deploy_key
          chmod 700 ./deploy_key
          sudo rsync -chav --delete \
            -e 'ssh -i ./deploy_key -o StrictHostKeyChecking=no' \
            ./newely ${{env.dest}}
  #Deployment:
    #name: Deploy in Prod Server
    #needs: [build]
    #runs-on: ubuntu-latest
    #steps:
      #- uses: appleboy/ssh-action@master
        #with:
          #host: ${{ secrets.SSH_HOST_PROD_SERVER }}
          #username: ${{ secrets.SSH_USER_PROD_SERVER }}
          #key: ${{ secrets.SSH_PRIVATE_KEY_PROD_SERVER }}
          #port: ${{ secrets.SSH_PORT_PROD_SERVER }}
          #script: |
            #cd /home/administration/CICD_Pipeline
            #cd nfb_frontend
            #npm install --legacy-peer-deps
            #npm run build --timeout=60000
            #cd ..
            #cd organflow_frontend
            #npm install --legacy-peer-deps
            #npm run build --timeout=60000
            #cd ..
            #docker-compose down
            #docker-compose up --build -d  
